<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1.0" />
  <title>Helmet Catcher Game</title>
  <style>
    body {
      margin: 0;
      padding: 0;
      background-color: #e8f5e9;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
      font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    }
    canvas {
      border: 2px solid #333;
      background-color: #fff;
    }
    #game-over {
      position: absolute;
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
      font-size: 36px;
      color: #333;
      display: none;
    }
  </style>
</head>
<body>
  <canvas id="gameCanvas" width="500" height="600"></canvas>
  <div id="game-over">Game Over! Your Score: <span id="final-score"></span></div>

  <script>
    const canvas = document.getElementById('gameCanvas');
    const ctx = canvas.getContext('2d');

    let basketWidth = 100;
    let basketHeight = 20;
    let basketX = (canvas.width - basketWidth) / 2;
    let basketSpeed = 5;
    let leftArrowPressed = false;
    let rightArrowPressed = false;

    let helmets = [];
    let helmetSize = 30;
    let helmetSpeed = 3;
    let score = 0;
    let gameOver = false;

    function createHelmet() {
      let x = Math.random() * (canvas.width - helmetSize);
      helmets.push({ x: x, y: -helmetSize });
    }

    function drawBasket() {
      ctx.fillStyle = '#4caf50';
      ctx.fillRect(basketX, canvas.height - basketHeight, basketWidth, basketHeight);
    }

    function drawHelmets() {
      ctx.fillStyle = '#ffeb3b';
      helmets.forEach((helmet, index) => {
        if (helmet.y + helmetSize > canvas.height - basketHeight && helmet.x > basketX && helmet.x < basketX + basketWidth) {
          score++;
          helmets.splice(index, 1);
        } else if (helmet.y > canvas.height) {
          gameOver = true;
        } else {
          helmet.y += helmetSpeed;
          ctx.beginPath();
          ctx.arc(helmet.x + helmetSize / 2, helmet.y + helmetSize / 2, helmetSize / 2, 0, Math.PI * 2);
          ctx.fill();
        }
      });
    }

    function moveBasket() {
      if (leftArrowPressed && basketX > 0) {
        basketX -= basketSpeed;
      }
      if (rightArrowPressed && basketX < canvas.width - basketWidth) {
        basketX += basketSpeed;
      }
    }

    function drawScore() {
      ctx.font = '20px Arial';
      ctx.fillStyle = '#333';
      ctx.fillText('Score: ' + score, 10, 30);
    }

    function gameLoop() {
      if (gameOver) {
        document.getElementById('final-score').textContent = score;
        document.getElementById('game-over').style.display = 'block';
        return;
      }

      ctx.clearRect(0, 0, canvas.width, canvas.height);

      moveBasket();
      drawBasket();
      drawHelmets();
      drawScore();

      if (Math.random() < 0.02) {
        createHelmet();
      }

      requestAnimationFrame(gameLoop);
    }

    document.addEventListener('keydown', (e) => {
      if (e.key === 'ArrowLeft') leftArrowPressed = true;
      if (e.key === 'ArrowRight') rightArrowPressed = true;
    });

    document.addEventListener('keyup', (e) => {
      if (e.key === 'ArrowLeft') leftArrowPressed = false;
      if (e.key === 'ArrowRight') rightArrowPressed = false;
    });

    gameLoop();
  </script>
</body>
</html>
