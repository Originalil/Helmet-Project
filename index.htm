  <script>
    /* Rest of the JavaScript logic */
    function initializeSlots() {
      for (let i = 1; i <= 4; i++) {
        const slot = document.getElementById(`slot${i}`);
        slot.innerHTML = '';
        
        moods.forEach((mood, index) => {
          const slotItem = document.createElement("div");
          slotItem.className = "slot-item";
          slotItem.style.transform = `translateY(${(index - 1) * 100}%)`;
          slotItem.style.color = moodColors[mood];
          slotItem.textContent = mood.charAt(0).toUpperCase() + mood.slice(1);
          slot.appendChild(slotItem);
        });
      }
    }

    function spinSlots() {
      if (isSpinning) return;
      
      isSpinning = true;
      document.getElementById("spinButton").disabled = true;
      
      const selectedMoods = [];
      const spins = [];
      
      // Start spinning animations
      for (let i = 1; i <= 4; i++) {
        const slot = document.getElementById(`slot${i}`);
        const items = slot.querySelectorAll(".slot-item");
        
        const spinDuration = 1000 + i * 500; // Staggered stop times
        const spinInterval = setInterval(() => {
          items.forEach((item, index) => {
            item.style.transform = `translateY(${((index - Math.floor(Math.random() * 4)) * 100)}%)`;
          });
        }, 100);
        
        spins.push({
          interval: spinInterval,
          duration: spinDuration,
          slot: i
        });
      }
      
      // Stop spinning animations one by one with delays
      spins.forEach(spin => {
        setTimeout(() => {
          clearInterval(spin.interval);
          
          // Select a random mood for this slot
          const randomMoodIndex = Math.floor(Math.random() * moods.length);
          const selectedMood = moods[randomMoodIndex];
          selectedMoods.push(selectedMood);
          
          // Position the selected mood in the center
          const items = document.getElementById(`slot${spin.slot}`).querySelectorAll(".slot-item");
          items.forEach((item, index) => {
            if (index === randomMoodIndex) {
              item.style.transform = `translateY(0)`;
            } else if (index < randomMoodIndex) {
              item.style.transform = `translateY(${(index - randomMoodIndex) * 100}%)`;
            } else {
              item.style.transform = `translateY(${(index - randomMoodIndex) * 100}%)`;
            }
          });
          
          // Add shimmer effect to the selected item
          items[randomMoodIndex].classList.add("shimmer");
          setTimeout(() => items[randomMoodIndex].classList.remove("shimmer"), 1000);
          
          // Check results after last slot stops
          if (spin.slot === 4) {
            setTimeout(checkSlotResults, 500, selectedMoods);
          }
        }, spin.duration);
      });
    }

    function toggleShop() {
      const shop = document.getElementById("shop");
      shop.style.display = shop.style.display === "flex" ? "none" : "flex";
    }

    function changeLuckQuantity(amount) {
      luckQuantity = Math.max(1, luckQuantity + amount);
      updateDisplay();
    }

    function changeCooldownQuantity(amount) {
      cooldownQuantity = Math.max(1, cooldownQuantity + amount);
      updateDisplay();
    }

    function buyLuck() {
      const cost = 50 * luckQuantity;
      if (tokens >= cost) {
        tokens -= cost;
        luckBoost += 10 * luckQuantity;
        showNotification(`Purchased ${luckQuantity} Luck Boost(s)! +${10 * luckQuantity}% Luck`, "success");
        updateDisplay();
      } else {
        showNotification("Not enough tokens!", "error");
      }
    }

    function buyCooldown() {
      const cost = cooldownCost * cooldownQuantity;
      if (tokens >= cost) {
        tokens -= cost;
        cooldown = Math.max(0, cooldown - (1000 * cooldownQuantity));
        showNotification(`Reduced cooldown by ${cooldownQuantity}s!`, "success");
        cooldownCost *= 2;
        updateDisplay();
      } else {
        showNotification("Not enough tokens!", "error");
      }
    }

    function showTokenChange(amount) {
      const element = document.createElement("div");
      element.className = "token-change";
      element.style.position = "absolute";
      element.style.left = `${Math.random() * 80 + 10}%`;
      element.style.top = `${Math.random() * 40 + 30}%`;
      element.style.color = amount >= 0 ? "#4CAF50" : "#F44336";
      element.textContent = amount >= 0 ? `+${amount}` : `${amount}`;
      
      document.body.appendChild(element);
      
      setTimeout(() => {
        document.body.removeChild(element);
      }, 1500);
    }

    function acceptRisk() {
      const risk = Math.random() < 0.5 ? -Math.floor(tokens / 2) : Math.floor(tokens * 1.5);
      tokens += risk;
      
      if (risk >= 0) {
        showNotification(`Risk paid off! You gained ${risk} tokens!`, "success");
        showTokenChange(risk);
      } else {
        showNotification(`Risk failed! You lost ${Math.abs(risk)} tokens!`, "error");
        showTokenChange(risk);
      }
      
      document.getElementById("takeRiskPopup").style.display = "none";
      updateDisplay();
    }

    function declineRisk() {
      document.getElementById("takeRiskPopup").style.display = "none";
    }

    // Initialize game and slot machine
    updateDisplay();

    // Start with some tokens for testing
    tokens = 50;
    updateDisplay();

    // Periodic updates
    setInterval(updateDisplay, 10000);
  </script>
</body>
</html>
