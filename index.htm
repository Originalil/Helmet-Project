<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Mental Gamble</title>
  <style>
    body {
      font-family: 'Segoe UI', sans-serif;
      background: linear-gradient(145deg, #e0f7ff, #f0f9ff);
      margin: 0;
      padding: 0;
      display: flex;
      justify-content: center;
      align-items: center;
      height: 100vh;
    }

    .container {
      background: white;
      border-radius: 20px;
      padding: 30px;
      box-shadow: 0 10px 30px rgba(0, 0, 0, 0.15);
      max-width: 400px;
      width: 100%;
      text-align: center;
      position: relative;
    }

    h1 {
      margin-bottom: 10px;
      color: #333;
    }

    .tokens {
      font-size: 20px;
      color: #0066cc;
      margin-bottom: 20px;
    }

    .mood-buttons, .challenge-section {
      display: flex;
      flex-wrap: wrap;
      justify-content: center;
      gap: 10px;
      margin-bottom: 20px;
    }

    .button {
      padding: 10px 16px;
      background: #0077ff;
      color: white;
      border: none;
      border-radius: 10px;
      cursor: pointer;
      font-size: 16px;
      transition: background 0.2s ease;
    }

    .button:hover {
      background: #005fcc;
    }

    .button.cooldown {
      background-color: #ff4444 !important;
      cursor: not-allowed;
    }

    .result {
      font-size: 18px;
      margin-top: 10px;
    }

    .quote {
      font-style: italic;
      color: #666;
      margin-top: 5px;
    }

    .challenge-section {
      display: none;
      flex-direction: column;
    }

    .challenge-info {
      color: #c33;
      font-weight: bold;
      margin-bottom: 10px;
    }

    .shop-icon {
      position: absolute;
      top: 20px;
      right: 20px;
      width: 28px;
      height: 28px;
      cursor: pointer;
    }

    .shop-panel {
      position: absolute;
      top: 60px;
      right: 20px;
      background: #f1f1f1;
      border: 1px solid #ccc;
      padding: 15px;
      border-radius: 10px;
      display: none;
      flex-direction: column;
      gap: 10px;
      box-shadow: 0 8px 16px rgba(0, 0, 0, 0.1);
    }

    .shop-item {
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    .shop-item button {
      background: #ffaa00;
    }

    .shop-item button:hover {
      background: #cc8800;
    }
  </style>
</head>
<body>
  <div class="container">
    <img src="https://cdn-icons-png.flaticon.com/512/1170/1170678.png" class="shop-icon" onclick="toggleShop()" alt="Shop Icon" />

    <div class="shop-panel" id="shopPanel">
      <div class="shop-item">
        <span>No Cooldown (1000 tokens)</span>
        <button class="button" onclick="buyNoCooldown()">Buy</button>
      </div>
    </div>

    <h1>Mental Gamble</h1>
    <div class="tokens">Tokens: <span id="tokens">1</span></div>

    <div class="mood-buttons">
      <button class="button" onclick="gamble(this, 'happy')">Happy</button>
      <button class="button" onclick="gamble(this, 'sad')">Sad</button>
      <button class="button" onclick="gamble(this, 'angry')">Angry</button>
      <button class="button" onclick="gamble(this, 'anxious')">Anxious</button>
      <button class="button" onclick="gamble(this, 'calm')">Calm</button>
    </div>

    <div id="result" class="result"></div>
    <div id="quote" class="quote"></div>

    <div class="challenge-section" id="challenge">
      <div class="challenge-info">Challenge Mode Unlocked!</div>
      <button class="button" onclick="challenge()">Take a Risk (-5 Tokens)</button>
    </div>
  </div>

  <script>
    let tokens = 1;
    let cooldown = false;
    let noCooldown = false;

    const tokenDisplay = document.getElementById("tokens");
    const resultDisplay = document.getElementById("result");
    const quoteDisplay = document.getElementById("quote");
    const challengeSection = document.getElementById("challenge");
    const shopPanel = document.getElementById("shopPanel");

    const quotes = {
      happy: "Joy is a net of love by which you can catch souls.",
      sad: "Tears come from the heart, not the brain.",
      angry: "Anger is one letter short of danger.",
      anxious: "You don't have to control your thoughts. You just have to stop letting them control you.",
      calm: "The nearer a man comes to a calm mind, the closer he is to strength."
    };

    const chances = [
      { type: "Common", prob: 0.5, reward: 1 },
      { type: "Uncommon", prob: 0.25, reward: 2 },
      { type: "Rare", prob: 0.15, reward: 4 },
      { type: "Epic", prob: 0.08, reward: 6 },
      { type: "Legendary", prob: 0.02, reward: 10 }
    ];

    function updateTokens(val) {
      tokens += val;
      if (tokens < 0) tokens = 0;
      tokenDisplay.textContent = tokens;
      challengeSection.style.display = tokens >= 10 ? "flex" : "none";
    }

    function getRarity() {
      let r = Math.random();
      let sum = 0;
      for (let i = 0; i < chances.length; i++) {
        sum += chances[i].prob;
        if (r < sum) return chances[i];
      }
      return chances[0];
    }

    function gamble(button, mood) {
      if (cooldown && !noCooldown) return;

      const rarity = getRarity();
      updateTokens(rarity.reward);

      resultDisplay.textContent = `You felt ${mood}. Got a ${rarity.type}! +${rarity.reward} tokens.`;
      quoteDisplay.textContent = `"${quotes[mood]}"`;

      if (!noCooldown) {
        cooldown = true;
        button.classList.add("cooldown");
        setTimeout(() => {
          cooldown = false;
          button.classList.remove("cooldown");
        }, 2000);
      }
    }

    function challenge() {
      if (tokens < 5) return alert("Not enough tokens!");
      updateTokens(-5);
      const win = Math.random() < 0.5;
      if (win) {
        updateTokens(3);
        resultDisplay.textContent = "You survived the challenge and gained 3 tokens!";
      } else {
        resultDisplay.textContent = "Challenge failed. You lost your 5 tokens.";
      }
      quoteDisplay.textContent = "";
    }

    function toggleShop() {
      shopPanel.style.display = shopPanel.style.display === "flex" ? "none" : "flex";
    }

    function buyNoCooldown() {
      if (tokens >= 1000) {
        updateTokens(-1000);
        noCooldown = true;
        alert("No Cooldown unlocked!");
        shopPanel.style.display = "none";
      } else {
        alert("You need 1000 tokens to buy this!");
      }
    }
  </script>
</body>
</html>
